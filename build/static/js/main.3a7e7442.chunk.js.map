{"version":3,"sources":["components/Footer.js","components/Navbar.js","components/Parameters.js","components/Replica.js","components/Characters.js","pages/CreateScenario.js","pages/ShowScenario.js","App.js","index.js"],"names":["Footer","className","React","Component","Navbar","exact","to","Parameters","changeActsCount","e","target","value","props","updateActsCount","localStorage","setItem","changeScenesCount","updateScenesCount","addCharacter","updateCharacter","handleSubmit","preventDefault","updateCharacters","type","this","actsCount","onChange","scenesCount","onSubmit","htmlFor","name","id","character","description","disabled","Replica","characters","useState","act","scene","text","currentReplica","updateCurrentReplicaFull","isSubmitAllowed","changePermissionForSubmit","pullData","a","resData","JSON","stringify","axios","post","console","log","error","message","useEffect","trim","placeholder","option","options","Array","fill","map","key","index","label","cols","rows","Characters","onClick","deleteCharacters","CreateScenario","acts","setState","scenes","newCharacter","Object","assign","state","concat","removeItem","parse","getItem","ShowScenario","script","updateScript","fetchNotes","get","res","payload","keys","data","element","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","firebase","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a7e7442.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class Footer extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <footer className=\"container-lg bg-dark footer text-light\">\r\n        <span>Информация в футере</span>\r\n      </footer>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport class Navbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar bg-dark header\">\r\n        <ul className=\"navbar-nav d-flex flex-row\">\r\n          <li className=\"nav-item mr-4\">\r\n            <NavLink \r\n              className=\"nav-link text-light\" \r\n              exact \r\n              to={'/'}\r\n            >\r\n              Создание сценария\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink \r\n              className=\"nav-link text-light\" \r\n              to={'/scenario'}\r\n            >\r\n              Готовый сценарий\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\n\r\nexport class Parameters extends React.Component {\r\n\r\n  changeActsCount = e => {\r\n    const actsCount = e.target.value;\r\n    if (actsCount > 0) { \r\n      this.props.updateActsCount(e.target.value);\r\n      localStorage.setItem('acts', e.target.value);\r\n    }\r\n  }\r\n\r\n  changeScenesCount = e => {\r\n    const scenesCount = e.target.value;\r\n    if (scenesCount > 0) { \r\n      this.props.updateScenesCount(e.target.value);\r\n      localStorage.setItem('scenes', e.target.value);\r\n    }\r\n  }\r\n\r\n  addCharacter = e => {\r\n    this.props.updateCharacter(e.target)\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.updateCharacters();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-lg d-flex flex-column bg-light\">\r\n        <h5 className=\"align-self-center text-center\">Параметры пьесы</h5>\r\n        <div className=\"input-group input-group-sm mb-1 align-self-center col-sm-5\">\r\n          <input \r\n            className=\"form-control\" \r\n            type=\"number\" \r\n            value={this.props.actsCount} \r\n            onChange={this.changeActsCount}\r\n          />\r\n          <span className=\"mr-1\">акта(ов)</span>\r\n          <input \r\n            className=\"form-control\" \r\n            type=\"number\" \r\n            value={this.props.scenesCount} \r\n            onChange={this.changeScenesCount}\r\n          />\r\n          <span className=\"\">сцен(ы)</span>\r\n        </div>\r\n        <form \r\n          className=\"d-flex justify-content-between align-items-center\"\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <div className=\"input-group input-group-sm col-sm-3\">\r\n            <label className=\"mr-1\" htmlFor=\"character\">Персонаж</label>\r\n            <input \r\n              className=\"form-control\" \r\n              type=\"text\" \r\n              name=\"name\" \r\n              id=\"character\" \r\n              value={this.props.character.name}\r\n              onChange={this.addCharacter}\r\n            />\r\n          </div>\r\n          <div className=\"input-group input-group-sm col-sm-6\">\r\n            <label className=\"mr-1\" htmlFor=\"characteristic\">Характеристика персонажа</label>\r\n            <input \r\n              className=\"form-control\" \r\n              type=\"text\" \r\n              name=\"description\"\r\n              id=\"characteristic\" \r\n              value={this.props.character.description}\r\n              onChange={this.addCharacter}\r\n            />\r\n          </div>\r\n          <button \r\n            className=\"btn btn-dark btn-sm\" \r\n            type=\"submit\"\r\n            disabled={!this.props.character.name}\r\n          >\r\n            Добавить персонажа\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\n\r\n\r\nexport const Replica = ({actsCount, scenesCount, characters}) => {\r\n  const [currentReplica, updateCurrentReplicaFull] = useState({\r\n    act: 1,\r\n    scene: 1,\r\n    character: \"\",\r\n    text: \"\"\r\n  })\r\n  const [isSubmitAllowed, changePermissionForSubmit] = useState(false);\r\n\r\n  const pullData = async () => {\r\n    const resData = JSON.stringify(currentReplica);\r\n    try {\r\n      await axios.post('https://create-scenario-default-rtdb.firebaseio.com/play.json', resData)\r\n      console.log('Данные успешно записаны');\r\n    } catch (e) {\r\n      console.error(e.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    !currentReplica.text.trim() ? changePermissionForSubmit(false) : changePermissionForSubmit(true)\r\n  }, [currentReplica.text])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log({currentReplica});\r\n    updateCurrentReplicaFull({\r\n      ...currentReplica,\r\n      text: \"\"\r\n    })\r\n    pullData();\r\n  }\r\n\r\n  return (\r\n    <aside className=\"col-sm-8 mt-3 bg-light\">\r\n      <h5 className=\"text-center\">Добавление реплик</h5>\r\n      <form \r\n        className=\"d-flex flex-column\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <label className=\"align-self-center mb-0\" htmlFor=\"act\">Акт</label>\r\n        <Select \r\n          name=\"act\"\r\n          placeholder=\"Выберите акт\"\r\n          onChange={(option) => updateCurrentReplicaFull({\r\n            ...currentReplica,\r\n            act: option.value\r\n          })}\r\n          options={new Array(actsCount).fill(\"1\").map((key, index) => {\r\n            return {\r\n              value: index + 1, label: index + 1\r\n            }\r\n          })} />\r\n        <label className=\"align-self-center mb-0\" htmlFor=\"scene\">Сцена</label>\r\n        <Select \r\n          name=\"scene\"\r\n          placeholder=\"Выберите сцену\"\r\n          onChange={(option) => updateCurrentReplicaFull({\r\n            ...currentReplica,\r\n            scene: option.value\r\n          })}\r\n          options={new Array(scenesCount).fill(\"1\").map((key, index) => {\r\n            return {\r\n              value: index + 1, label: index + 1\r\n            }\r\n          })} />\r\n        <label className=\"align-self-center mb-0\" htmlFor=\"character\">Персонаж</label>\r\n        <Select \r\n          name=\"character\"\r\n          placeholder=\"Выберите персонажа\"\r\n          onChange={(option) => updateCurrentReplicaFull({\r\n            ...currentReplica,\r\n            character: option.value\r\n          })}\r\n          options={characters.map((character) => {\r\n            return {\r\n              value: character.name, label: character.name\r\n            }\r\n          })} />\r\n        <label className=\"align-self-center mb-0\" htmlFor=\"text\">Реплика</label>\r\n        <textarea \r\n          className=\"form-control\" \r\n          name=\"replica\" \r\n          id=\"text\" \r\n          cols=\"30\" \r\n          rows=\"10\"\r\n          onChange={(e) => updateCurrentReplicaFull({\r\n            ...currentReplica,\r\n            text: e.target.value\r\n          })}\r\n          value={currentReplica.text}\r\n        >\r\n          \r\n        </textarea>\r\n        <button \r\n          disabled={!isSubmitAllowed}\r\n          className=\"btn btn-sm btn-dark\" \r\n          type=\"submit\"\r\n        >\r\n          Добавить реплику\r\n        </button>\r\n      </form>\r\n    </aside>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport class Characters extends React.Component {\r\n  render() {\r\n    return (\r\n      <aside className=\"col-sm-4 mt-3 bg-light\">\r\n        <h5 className=\"text-center\">Действующие лица</h5>\r\n        <div className=\"characters\">\r\n          {this.props.characters.map((character, index) => {\r\n            return (\r\n              <p key={index}>{character.name}: {character.description}</p>\r\n            )\r\n          })}\r\n        </div>\r\n        <button \r\n          className=\"btn btn-sm btn-dark\" \r\n          type=\"button\"\r\n          onClick={this.props.deleteCharacters}\r\n        >\r\n          Удалить персонажей\r\n        </button>\r\n      </aside>\r\n    )\r\n  }\r\n}","import React, { Fragment } from 'react'\r\nimport { Parameters } from '../components/Parameters'\r\nimport { Replica } from '../components/Replica'\r\nimport { Characters } from '../components/Characters'\r\n\r\nexport class CreateScenario extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      acts: JSON.parse(localStorage.getItem('acts')) || 1,\r\n      scenes: JSON.parse(localStorage.getItem('scenes')) || 1,\r\n      character: {\r\n        name: \"\",\r\n        description: \"\"\r\n      },\r\n      characters: JSON.parse(localStorage.getItem('characters')) || []\r\n    }\r\n  }\r\n\r\n  updateActsCount = (acts) => {\r\n    this.setState({ acts })\r\n  }\r\n\r\n  updateScenesCount = (scenes) => {\r\n    this.setState({ scenes })\r\n  }\r\n\r\n  updateCharacter = (newCharacter) => {\r\n    let character = Object.assign({}, this.state.character);\r\n    const {name, value} = newCharacter;\r\n    character[name] = value;\r\n    return this.setState({character});\r\n  }\r\n\r\n  updateCharacters = () => {\r\n    this.setState(state => {\r\n      const characters = state.characters.concat(this.state.character);\r\n      localStorage.setItem('characters', JSON.stringify(characters));\r\n      return {\r\n        character: {\r\n          name: \"\",\r\n          description: \"\"\r\n        },\r\n        characters\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteCharacters = () => {\r\n    localStorage.removeItem('acts');\r\n    this.setState({characters: []});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Parameters \r\n          actsCount={this.state.acts} \r\n          scenesCount={this.state.scenes} \r\n          character={this.state.character} \r\n          updateActsCount={this.updateActsCount} \r\n          updateScenesCount={this.updateScenesCount}\r\n          updateCharacter={this.updateCharacter} \r\n          updateCharacters={this.updateCharacters}\r\n        />\r\n        <div className=\"d-flex main\">\r\n          <Replica \r\n            actsCount={this.state.acts} \r\n            scenesCount={this.state.scenes} \r\n            characters={this.state.characters}\r\n          />\r\n          <Characters \r\n            characters={this.state.characters}\r\n            deleteCharacters={this.deleteCharacters}\r\n          />\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nexport const ShowScenario = () => {\r\n  const [script, updateScript] = useState([]);\r\n\r\n  const fetchNotes = async () => {\r\n    const res = await axios.get('https://create-scenario-default-rtdb.firebaseio.com/play.json')\r\n\r\n    const payload = Object.keys(res.data).map(key => {\r\n      return {\r\n        ...res.data[key],\r\n        id: key\r\n      }\r\n    })\r\n    updateScript(payload)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchNotes()\r\n  }, [])\r\n  \r\n  return (\r\n    <ul>\r\n      {script.map(element => (\r\n        <li key={element.id}>{element.act}{element.scene}{element.character}{element.text}</li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}","import { FirebaseDatabaseProvider } from '@react-firebase/database';\r\nimport React from 'react';\r\nimport firebase from 'firebase/app'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport { Footer } from './components/Footer';\r\nimport { Navbar } from './components/Navbar';\r\nimport { CreateScenario } from './pages/CreateScenario';\r\nimport { ShowScenario } from './pages/ShowScenario';\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAR2ffTCaUtpX2Rh1T_ShOlPeFvoUHLwnA\",\r\n  authDomain: \"create-scenario.firebaseapp.com\",\r\n  databaseURL: \"https://create-scenario-default-rtdb.firebaseio.com\",\r\n  projectId: \"create-scenario\",\r\n  storageBucket: \"create-scenario.appspot.com\",\r\n  messagingSenderId: \"321267991202\",\r\n  appId: \"1:321267991202:web:bbc8054643296b97d0cdfb\",\r\n  measurementId: \"G-5K9CBWKMZ2\"\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <FirebaseDatabaseProvider {...firebaseConfig} firebase={firebase}>\r\n      <BrowserRouter>\r\n        <Navbar />\r\n        <div className=\"container-lg\">\r\n          <Switch>\r\n            <Route path={'/'} exact component={CreateScenario} />\r\n            <Route path={'/scenario'} component={ShowScenario} />\r\n          </Switch>\r\n        </div>\r\n        <Footer />\r\n      </BrowserRouter>\r\n    </FirebaseDatabaseProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}